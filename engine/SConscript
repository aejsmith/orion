import util

Import('manager')

# Always have the engine include directory available.
manager.baseEnv['CPPPATH'] += [Dir('include')]

# Add all 3rd party library components.
SConscript(dirs = ['3rdparty'])

################
# Core library #
################

depends = [
    'external/sdl',
    '3rdparty/glm',
]

env = manager.CreateEnvironment(depends = depends)
Export('env')

objects = SConscript(dirs = ['src/core'])

manager.AddComponent(
    name = 'engine/core',
    depends = depends,
    objects = objects)

#############
# Utilities #
#############

SConscript(dirs = ['utilities'])

###############
# Main engine #
###############

depends = [
    'external/bullet',
    'external/freetype',
    '3rdparty/glslang',
    '3rdparty/imgui',
    '3rdparty/rapidjson',
    'engine/core',
]

if manager.baseEnv['GPU_API'] == 'gl':
    depends += [
        'external/glew',
        '3rdparty/spirv-cross',
    ]
elif manager.baseEnv['GPU_API'] == 'vulkan':
    depends += ['external/vulkan']

env = manager.CreateEnvironment(depends = depends)
Export('env')

manager.AddComponent(
    name = 'engine',
    depends = depends,
    objects = util.flatten(SConscript(dirs = [
        'include/engine',
        'include/graphics',
        'include/physics',
        'include/render',
        'include/shader',
        'src/engine',
        'src/gpu',
        'src/graphics',
        'src/input',
        'src/physics',
        'src/render',
        'src/render_core',
        'src/shader',
    ])))
