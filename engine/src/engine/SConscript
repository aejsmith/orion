from datetime import datetime
import vcs

Import('env')

objects = map(env.Object, [
    'asset.cc',
    'asset_loader.cc',
    'asset_manager.cc',
    'component.cc',
    'debug_manager.cc',
    'engine.cc',
    'entity.cc',
    'font.cc',
    'json_serialiser.cc',
    'main.cc',
    'mesh.cc',
    'object.cc',
    'render_target.cc',
    'serialiser.cc',
    'texture.cc',
    'version.cc',
    'window.cc',
    'world.cc',
    'world_explorer.cc',
])

objects += SConscript(dirs = [
    'loaders',
])

# Generate the version information file.
def gen_version_cc(target, source, env):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    version = vcs.revision_id()

    f = open(str(target[0]), 'w')
    f.write('const char *g_versionString = "%s";\n' % (version))
    f.write('const char *g_versionTimestamp = "%s";\n' % (timestamp))
    f.close()
AlwaysBuild(env.Command('version.cc', [], env.Action(gen_version_cc, None)))

Return('objects')
