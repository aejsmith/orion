/* This file is automatically generated by objgen. Do not edit. */
{{#include}}
#include "{{include}}"
{{/include}}
{{#classes}}

static const uint32_t {{name}}_traits =
{{#isConstructable}}
    MetaType::kIsConstructable |
{{/isConstructable}}
{{#isPublicConstructable}}
    MetaType::kIsPublicConstructable |
{{/isPublicConstructable}}
    0;

{{#properties}}
void {{name}}_get_{{propertyName}}(const Object *base, void *value) {
    auto object = static_cast<const {{name}} *>(base);
{{#propertyGet}}
    *reinterpret_cast<{{propertyType}} *>(value) = object->{{propertyGet}}();
{{/propertyGet}}
{{^propertyGet}}
    *reinterpret_cast<{{propertyType}} *>(value) = object->{{propertyName}};
{{/propertyGet}}
}

void {{name}}_set_{{propertyName}}(Object *base, const void *value) {
    auto object = static_cast<{{name}} *>(base);
{{#propertySet}}
    object->{{propertySet}}(*reinterpret_cast<const {{propertyType}} *>(value));
{{/propertySet}}
{{^propertySet}}
    object->{{propertyName}} = *reinterpret_cast<const {{propertyType}} *>(value);
{{/propertySet}}
}

{{/properties}}
static const MetaClass::PropertyArray {{name}}_propertyTable = {
{{#properties}}
    MetaProperty("{{propertyName}}", MetaType::lookup<{{propertyType}}>(), {{name}}_get_{{propertyName}}, {{name}}_set_{{propertyName}}),
{{/properties}}
};

const MetaClass {{name}}::staticMetaClass(
    "{{name}}",
    {{#parent}}&{{parent}}::staticMetaClass{{/parent}}{{^parent}}nullptr{{/parent}},
    {{name}}_traits,
{{#isConstructable}}
    [] () -> Object * { return new {{name}}; },
{{/isConstructable}}
{{^isConstructable}}
    MetaClass::ConstructorFunction(),
{{/isConstructable}}
    {{name}}_propertyTable);

const MetaClass &{{name}}::metaClass() const {
    return {{name}}::staticMetaClass;
}
{{/classes}}
{{#enums}}

static MetaType::EnumData<{{name}}> {{name}}_data = {
{{#constants}}
    { "{{constantName}}", {{constantValue}} },
{{/constants}}
};
{{/enums}}
